---
- name: Install Node.js and NPM
  hosts: ec2-app-vm
  become: true
  vars:
    nodejs_version: "20.x"
    nodejs_keyring: /usr/share/keyrings/nodesource.gpg
    force_reinstall: false
  tasks:
    - name: Ensure apt-transport-https is installed
      apt:
        name: apt-transport-https
        state: present
        update_cache: yes

    - name: Check if Node.js is already installed and get version
      command: node --version
      register: node_check
      changed_when: false
      failed_when: false
      check_mode: no

    - name: Set node installation status
      set_fact:
        node_needs_install: "{{ node_check.rc != 0 or 'v20.' not in node_check.stdout | default('') or force_reinstall }}"

    - name: Ensure previous Node.js packages are removed if needed
      apt:
        name: "{{ item }}"
        state: absent
        purge: yes
      loop:
        - nodejs
        - libnode-dev
        - npm
      when: node_needs_install

    - name: Add NodeSource GPG key
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present
        keyring: "{{ nodejs_keyring }}"
      when: node_needs_install

    - name: Add NodeSource repository
      apt_repository:
        repo: "deb [signed-by={{ nodejs_keyring }}] https://deb.nodesource.com/node_{{ nodejs_version }} {{ ansible_distribution_release }} main"
        state: present
        filename: nodesource
      when: node_needs_install

    - name: Install Node.js
      apt:
        name: nodejs
        state: present
        update_cache: yes
      register: nodejs_install
      when: node_needs_install

    # - name: Get Node.js version
    #   command: node --version
    #   register: node_version
    #   changed_when: false
    #   check_mode: no

    # - name: Get npm version
    #   command: npm --version
    #   register: npm_version
    #   changed_when: false
    #   check_mode: no

    - name: Install PM2 globally
      npm:
        name: pm2
        global: yes
        state: present
      register: pm2_install

    # - name: Get PM2 version
    #   command: pm2 --version
    #   register: pm2_version
    #   changed_when: false
    #   check_mode: no

    - name: Create directory for the app
      file:
        path: /repo
        state: directory
        mode: "0755"

    - name: Clone or update repository
      git:
        repo: https://github.com/stravos97/node-sparta-test-app.git
        dest: /repo
        update: yes
        force: no
      register: git_result

    - name: Install npm dependencies
      npm:
        path: /repo/app
        state: present
      register: npm_install

    - name: Check if app is running in PM2
      shell: pm2 list | grep -q " app " || echo ""
      register: app_check
      changed_when: false
      failed_when: false
      check_mode: no

    - name: Set app running status
      set_fact:
        app_running: "{{ app_check.rc == 0 }}"

    - name: Start app with PM2 if not running
      command: pm2 start app.js
      args:
        chdir: /repo/app
      when: not app_running | bool

    - name: Reload app with PM2 if already running and code changed
      command: pm2 reload app
      args:
        chdir: /repo/app
      when:
        - app_running | bool
        - git_result.changed or npm_install.changed

    - name: Display versions
      debug:
        msg:
          - "Node.js version: {{ node_version.stdout }}"
          - "npm version: {{ npm_version.stdout }}"
          - "PM2 version: {{ pm2_version.stdout }}"
          - "Git clone/update result: {{ 'Changed' if git_result.changed else 'No change' }}"
          - "npm install result: {{ 'Changed' if npm_install.changed else 'No change' }}"
